#--- Functions ---#

#--- Array Function Begin ---#
# Read the file in parameter and fill the array named "array"
getArray() {
    array=()
    i=0
    while read line # Read a line
    do
        array[i]=$line # Put it into the array
        i=$(($i + 1))
    done < $1
}
#--- Array Function End   ---#

cleanMac() {
	# $1 mac address
	# $2 case ("UP"/"LOW")
	# $3 seperator ("-"/":"/"" etc)
	# Remove all non Alfanumeric characters,  set case and add seperator for lookup in oui.txt
	workingMac=${1//[!0-9A-Za-z]/}
	case=`echo $2 | tr '[:lower:]' '[:upper:]'`
	if [ "$case" == "UP" ] ; then
		workingMac=`echo $workingMac | tr '[:lower:]' '[:upper:]'`
	else
		workingMac=`echo $workingMac | tr '[:upper:]' '[:lower:]'`
	fi
	workingMac=$(echo ${workingMac:0:2}$3${workingMac:2:2}$3${workingMac:4:2}$3${workingMac:6:2}$3${workingMac:8:2}$3${workingMac:10:2})
	echo $workingMac
}

addNic() {
	# $1 mac
	# $2 type (lan/wifi/bt)
	# $3 company
	cleanNic=$(cleanMac $1 "UP" "")

	if  ! grep -q $cleanNic $DataDir/nic.dm ; then
		# Get the latest version of the MAC -> Manufacturer mapping table
		#wget -c -N -O $DataDir/oui.txt http://standards-oui.ieee.org/oui.txt
		#wget -c -N -O $DataDir/oui.txt http://linuxnet.ca/ieee/oui.txt
		#cd /usr/share/arp-scan/ && get-oui && cd $InstallDir
		MACIdentification=$(cleanMac $1 "UP" "-")
		MACIdentification=${MACIdentification:0:8}
		#DeviceMan=""
		#DeviceMan=$(cat $DataDir/oui.txt | grep -m 1 $MACIdentification | cut -f3)
		#DeviceURLName=`echo $DeviceMan | tr "," "."`  
		echo "mac:$cleanNic;type:$2;timeout:2;deviceid:0;company:$3;description:" >> $DataDir/nic.dm
		# Add device to Datamodel-Nic
		#nic
		#- mac
		#- nicType (lan/wifi/bt)
		#- timoutPeriod 
		#- deviceId
		#- manufacturer
		echo -n "mac:$cleanNic;deviceid:0;status:NEW;lastSeen:" >> $DataDir/nicStatus.dm
		date +%s >> $DataDir/nicStatus.dm
		#nicStatus
		#- mac
		#- status
		#- lastSeen
		echo "$CurrentDateTime - Added new mac $cleanNic by $3 to Datamodel-Nic" >> $LogDir/nic.dm.log.$CurrentDateYmd
		echo "$CurrentDateTime - Added new mac $cleanNic by $3 with status NEW" >> $LogDir/nicStatus.dm.log.$CurrentDateYmd
		echo "$CurrentDateTime - Added new mac $cleanNic by $3 to Datamodel-Nic" 
	fi
	
}

